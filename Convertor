import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QWidget, QVBoxLayout, QLabel, QPushButton, QFileDialog
from PyQt5.QtCore import Qt, QMimeData

class ConverterGUI(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("File Converter")
        self.setGeometry(100, 100, 400, 200)

        self.centralWidget = QWidget()
        self.setCentralWidget(self.centralWidget)
        self.layout = QVBoxLayout()
        self.centralWidget.setLayout(self.layout)

        self.dragDropLabel = QLabel("Drag and Drop PDF Files Here", alignment=Qt.AlignCenter)
        self.dragDropLabel.setStyleSheet("border: 2px dashed #aaa; padding: 20px;")
        self.dragDropLabel.setAcceptDrops(True)
        self.dragDropLabel.dragEnterEvent = self.dragEnterEvent
        self.dragDropLabel.dropEvent = self.dropEvent
        self.layout.addWidget(self.dragDropLabel)

        self.fileNamesLabel = QLabel("", alignment=Qt.AlignCenter)
        self.layout.addWidget(self.fileNamesLabel)

        self.convertButton = QPushButton("Convert")
        self.convertButton.clicked.connect(self.convertFiles)
        self.layout.addWidget(self.convertButton)

        self.files = []

    def dragEnterEvent(self, event):
        if event.mimeData().hasUrls():
            event.accept()
        else:
            event.ignore()

    def dropEvent(self, event):
        if event.mimeData().hasUrls():
            urls = event.mimeData().urls()
            for url in urls:
                filePath = str(url.toLocalFile())
                if filePath.lower().endswith('.pdf'):
                    self.files.append(filePath)
                else:
                    print("Unsupported file format:", filePath)
            self.updateFileNamesLabel()
            event.accept()
        else:
            event.ignore()

    def updateFileNamesLabel(self):
        self.fileNamesLabel.setText("\n".join(self.files))

    def convertFiles(self):
        # Implement PDF conversion logic using self.files list
        print("Converting PDF files:", self.files)

def createGui():
    app = QApplication(sys.argv)
    gui = ConverterGUI()
    gui.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    createGui()
